---
title: Assignment overview
menu:
  assignment:
    parent: Overview
    weight: 1
type: docs
weight: 1
output:
  blogdown::html_page:
    toc: true
---

You will get the most of out this class if you:

1. Engage with the readings and lecture materials
2. Regularly use R

Hopefully these assignements help reinforce those strategies.


## Weekly assignments

Each week during our 'lab' section (usually on Thursdays), you'll have an assignment due. These assignements involve a mix of coding, analyis, and reflection. These exercises will have 1–5 short tasks that are directly related to the topic for the day along with 1-2 reflection questions. The material we cover in class along with the guided [examples](/examples/) should be all you need to complete the assignments, but feel free to ask your classmates, the Intenets, or me if you get stuck. **You may (and should!) work together on the exercises, but you must turn in your own answers.**

I will grade these memos using a check system:

- ✔+: (*17.25 points (115%) in gradebook*) Exercises are 100% completed. Every task was attempted and answered, and most answers are correct. Knitted document is clean and easy to follow. Work is exceptional. I will not assign these often.
- ✔: (*15 points (100%) in gradebook*) Exercises are 70–99% complete and most answers are correct. This is the expected level of performance.
- ✔−: (*7.5 points (50%) in gradebook*) Exercises are less than 70% complete and/or most answers are incorrect. This indicates that you need to improve next time. I will hopefully not assign these often.

Notice that is essentially a pass/fail or completion-based system.  I'm not grading your coding ability, I'm not counting the exact number of words you're writing, and I'm not looking for encyclopedic citations of every single reading. I'm looking for a good faith effort and thoughtful engagement, that's all. Do good work and you'll get a ✓.

You will turn these exercises in using GitHub Classroom. .


## Mini projects

To give you practice with the data and design principles you'll learn in this class, you will complete two mini projects. I will provide you with real-world data and pose one or more questions—you will make a pretty picture to answer those questions.

The mini projects will be graded using a check system:

- ✔+: (*57.5 points (≈115%) in gradebook*) Project is phenomenally well-designed and uses advanced R techniques. The project uncovers an important story that is not readily apparent from just looking at the raw data. I will not assign these often.
- ✔: (*50 points (100%) in gradebook*) Project is fine, follows most design principles, answers a question from the data, and uses R correctly. This is the expected level of performance.
- ✔−: (*25 points (50%) in gradebook*) Project is missing large components, is poorly designed, does not answer a relevant question, and/or uses R incorrectly. This indicates that you need to improve next time. I will hopefully not assign these often.

Because these mini projects give you practice for the final project, I will provide you with substantial feedback on your design and code.


## Final project

At the end of the course, you will demonstrate your spatial analysis and visualization skills by completing a final project.

[Complete details for the final project (including past examples of excellent projects) are here.](/assignment/final-project/)

**There is no final exam. This project is your final exam.**

The project will ***not*** be graded using a check system. Instead I will use a rubric to grade four elements of your project:

1. Technical skills (is the workflow robust? Scaleable?)
2. Quality of visualization (is a map necessary? how do we deal with uncertainty?)
4. Story (Why do we care about this? Why does space matter?)

If you've engaged with the course content and completed the exercises and mini projects throughout the course, you should do just fine with the final project.